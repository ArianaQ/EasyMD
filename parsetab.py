
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOLD BULLET CLEAN_TEXT CODE EMOJI HEADER1 HEADER2 HEADER3 HEADER4 HEADER5 HEADER6 IMAGE ITALIC LINK LSQUARE_PAREN NUM QUOTE RSQUARE_PAREN STRIKE TASK TASKCHECK TEXT USERexpression : header \n                | bold \n                | italic\n                | strike\n                | user\n                | image\n                | bullet\n                | link\n                | quote\n                | emoji\n                | code\n                | num\n                | task\n                | taskcheck\n                | clean_textheader : LSQUARE_PAREN HEADER1  TEXT RSQUARE_PAREN\n            | LSQUARE_PAREN HEADER2  TEXT RSQUARE_PAREN\n            | LSQUARE_PAREN HEADER3  TEXT RSQUARE_PAREN\n            | LSQUARE_PAREN HEADER4  TEXT RSQUARE_PAREN\n            | LSQUARE_PAREN HEADER5  TEXT RSQUARE_PAREN\n            | LSQUARE_PAREN HEADER6  TEXT RSQUARE_PAREN\n    clean_text : CLEAN_TEXT\n                    | CLEAN_TEXT compound \n                    | CLEAN_TEXT compound TEXT\n                    | clean_text\n                    compound : bold \n                | italic\n                | strike\n                | user\n                | image\n                | link\n                | emoji\n                | bold clean_text\n                | italic clean_text\n                | strike clean_text\n                | user clean_text\n                | image clean_text\n                | link clean_text\n                | emoji clean_textbold : LSQUARE_PAREN BOLD TEXT RSQUARE_PARENitalic : LSQUARE_PAREN ITALIC TEXT RSQUARE_PARENstrike : LSQUARE_PAREN STRIKE TEXT RSQUARE_PARENuser : LSQUARE_PAREN USER TEXT RSQUARE_PAREN image : LSQUARE_PAREN IMAGE TEXT RSQUARE_PARENbullet : LSQUARE_PAREN BULLET TEXT RSQUARE_PARENlink : LSQUARE_PAREN LINK TEXT  RSQUARE_PARENquote : LSQUARE_PAREN QUOTE TEXT RSQUARE_PARENemoji : LSQUARE_PAREN EMOJI TEXT RSQUARE_PARENcode : LSQUARE_PAREN CODE TEXT RSQUARE_PARENnum : LSQUARE_PAREN NUM TEXT RSQUARE_PARENtask : LSQUARE_PAREN TASK TEXT RSQUARE_PARENtaskcheck : LSQUARE_PAREN TASKCHECK TEXT RSQUARE_PAREN'
    
_lr_action_items = {'LSQUARE_PAREN':([0,18,],[17,46,]),'CLEAN_TEXT':([0,39,40,41,42,43,44,45,80,81,82,83,84,86,88,],[18,18,18,18,18,18,18,18,-40,-41,-42,-43,-44,-46,-48,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,38,39,40,41,42,43,44,45,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-22,-23,-26,-27,-28,-29,-30,-31,-32,-24,-25,-25,-25,-25,-25,-25,-25,-16,-17,-18,-19,-20,-21,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,]),'HEADER1':([17,],[19,]),'HEADER2':([17,],[20,]),'HEADER3':([17,],[21,]),'HEADER4':([17,],[22,]),'HEADER5':([17,],[23,]),'HEADER6':([17,],[24,]),'BOLD':([17,46,],[25,25,]),'ITALIC':([17,46,],[26,26,]),'STRIKE':([17,46,],[27,27,]),'USER':([17,46,],[28,28,]),'IMAGE':([17,46,],[29,29,]),'BULLET':([17,],[30,]),'LINK':([17,46,],[31,31,]),'QUOTE':([17,],[32,]),'EMOJI':([17,46,],[33,33,]),'CODE':([17,],[34,]),'NUM':([17,],[35,]),'TASK':([17,],[36,]),'TASKCHECK':([17,],[37,]),'TEXT':([18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,66,67,68,69,70,71,72,73,80,81,82,83,84,86,88,],[-22,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,-26,-27,-28,-29,-30,-31,-32,-24,-25,-25,-25,-25,-25,-25,-25,-40,-41,-42,-43,-44,-46,-48,]),'RSQUARE_PAREN':([47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,],[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,],[1,]),'header':([0,],[2,]),'bold':([0,18,],[3,39,]),'italic':([0,18,],[4,40,]),'strike':([0,18,],[5,41,]),'user':([0,18,],[6,42,]),'image':([0,18,],[7,43,]),'bullet':([0,],[8,]),'link':([0,18,],[9,44,]),'quote':([0,],[10,]),'emoji':([0,18,],[11,45,]),'code':([0,],[12,]),'num':([0,],[13,]),'task':([0,],[14,]),'taskcheck':([0,],[15,]),'clean_text':([0,39,40,41,42,43,44,45,],[16,67,68,69,70,71,72,73,]),'compound':([18,],[38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> header','expression',1,'p_expression','easy_md_parser.py',11),
  ('expression -> bold','expression',1,'p_expression','easy_md_parser.py',12),
  ('expression -> italic','expression',1,'p_expression','easy_md_parser.py',13),
  ('expression -> strike','expression',1,'p_expression','easy_md_parser.py',14),
  ('expression -> user','expression',1,'p_expression','easy_md_parser.py',15),
  ('expression -> image','expression',1,'p_expression','easy_md_parser.py',16),
  ('expression -> bullet','expression',1,'p_expression','easy_md_parser.py',17),
  ('expression -> link','expression',1,'p_expression','easy_md_parser.py',18),
  ('expression -> quote','expression',1,'p_expression','easy_md_parser.py',19),
  ('expression -> emoji','expression',1,'p_expression','easy_md_parser.py',20),
  ('expression -> code','expression',1,'p_expression','easy_md_parser.py',21),
  ('expression -> num','expression',1,'p_expression','easy_md_parser.py',22),
  ('expression -> task','expression',1,'p_expression','easy_md_parser.py',23),
  ('expression -> taskcheck','expression',1,'p_expression','easy_md_parser.py',24),
  ('expression -> clean_text','expression',1,'p_expression','easy_md_parser.py',25),
  ('header -> LSQUARE_PAREN HEADER1 TEXT RSQUARE_PAREN','header',4,'p_header','easy_md_parser.py',31),
  ('header -> LSQUARE_PAREN HEADER2 TEXT RSQUARE_PAREN','header',4,'p_header','easy_md_parser.py',32),
  ('header -> LSQUARE_PAREN HEADER3 TEXT RSQUARE_PAREN','header',4,'p_header','easy_md_parser.py',33),
  ('header -> LSQUARE_PAREN HEADER4 TEXT RSQUARE_PAREN','header',4,'p_header','easy_md_parser.py',34),
  ('header -> LSQUARE_PAREN HEADER5 TEXT RSQUARE_PAREN','header',4,'p_header','easy_md_parser.py',35),
  ('header -> LSQUARE_PAREN HEADER6 TEXT RSQUARE_PAREN','header',4,'p_header','easy_md_parser.py',36),
  ('clean_text -> CLEAN_TEXT','clean_text',1,'p_clean_text','easy_md_parser.py',53),
  ('clean_text -> CLEAN_TEXT compound','clean_text',2,'p_clean_text','easy_md_parser.py',54),
  ('clean_text -> CLEAN_TEXT compound TEXT','clean_text',3,'p_clean_text','easy_md_parser.py',55),
  ('clean_text -> clean_text','clean_text',1,'p_clean_text','easy_md_parser.py',56),
  ('compound -> bold','compound',1,'p_compund','easy_md_parser.py',83),
  ('compound -> italic','compound',1,'p_compund','easy_md_parser.py',84),
  ('compound -> strike','compound',1,'p_compund','easy_md_parser.py',85),
  ('compound -> user','compound',1,'p_compund','easy_md_parser.py',86),
  ('compound -> image','compound',1,'p_compund','easy_md_parser.py',87),
  ('compound -> link','compound',1,'p_compund','easy_md_parser.py',88),
  ('compound -> emoji','compound',1,'p_compund','easy_md_parser.py',89),
  ('compound -> bold clean_text','compound',2,'p_compund','easy_md_parser.py',90),
  ('compound -> italic clean_text','compound',2,'p_compund','easy_md_parser.py',91),
  ('compound -> strike clean_text','compound',2,'p_compund','easy_md_parser.py',92),
  ('compound -> user clean_text','compound',2,'p_compund','easy_md_parser.py',93),
  ('compound -> image clean_text','compound',2,'p_compund','easy_md_parser.py',94),
  ('compound -> link clean_text','compound',2,'p_compund','easy_md_parser.py',95),
  ('compound -> emoji clean_text','compound',2,'p_compund','easy_md_parser.py',96),
  ('bold -> LSQUARE_PAREN BOLD TEXT RSQUARE_PAREN','bold',4,'p_bold','easy_md_parser.py',100),
  ('italic -> LSQUARE_PAREN ITALIC TEXT RSQUARE_PAREN','italic',4,'p_italic','easy_md_parser.py',105),
  ('strike -> LSQUARE_PAREN STRIKE TEXT RSQUARE_PAREN','strike',4,'p_strike','easy_md_parser.py',110),
  ('user -> LSQUARE_PAREN USER TEXT RSQUARE_PAREN','user',4,'p_user','easy_md_parser.py',115),
  ('image -> LSQUARE_PAREN IMAGE TEXT RSQUARE_PAREN','image',4,'p_image','easy_md_parser.py',120),
  ('bullet -> LSQUARE_PAREN BULLET TEXT RSQUARE_PAREN','bullet',4,'p_bullet','easy_md_parser.py',125),
  ('link -> LSQUARE_PAREN LINK TEXT RSQUARE_PAREN','link',4,'p_link','easy_md_parser.py',130),
  ('quote -> LSQUARE_PAREN QUOTE TEXT RSQUARE_PAREN','quote',4,'p_quote','easy_md_parser.py',135),
  ('emoji -> LSQUARE_PAREN EMOJI TEXT RSQUARE_PAREN','emoji',4,'p_emoji','easy_md_parser.py',140),
  ('code -> LSQUARE_PAREN CODE TEXT RSQUARE_PAREN','code',4,'p_code','easy_md_parser.py',145),
  ('num -> LSQUARE_PAREN NUM TEXT RSQUARE_PAREN','num',4,'p_num','easy_md_parser.py',150),
  ('task -> LSQUARE_PAREN TASK TEXT RSQUARE_PAREN','task',4,'p_task','easy_md_parser.py',155),
  ('taskcheck -> LSQUARE_PAREN TASKCHECK TEXT RSQUARE_PAREN','taskcheck',4,'p_taskcheck','easy_md_parser.py',159),
]
